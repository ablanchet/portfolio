<article><h2>Invenietis</h2><h3>Présentation de la société</h3><p><img src="/img/references/invenietis/logo.png" class="right"> Invenietis est une entreprise d’une dizaine de personnes spécialisée en développement et édition de logiciel.</p><p>Créée en 2004 par Olivier Spinelli et spécialisée depuis le début dans les technologies Microsoft .Net, Invenietis a développé son expertise dans l’intranet et l’extranet complexe pour ses clients.</p><p>Nous avons ainsi obtenu cette année la certification Microsoft Silver Partner en Edition de logiciel.</p><h3>Mon implication</h3><p>J'ai avant tout intégré Invenietis pour les personnes avec qui j'allai être amené à travailler. Je pensais que les perspectives d'évolution et les&nbsp;responsabilités qui me seraient confiées&nbsp;n'allaient pas être particulièrement conséquentes, mais la formation que j'ai reçu s'est en réalité avérée être très importante. Je me suis donc en partie trompé : la formation que j'ai reçu de la part d'Olivier Spinelli, d'Isaac Duplan, et des autres (Guillaume Fradet, Cédric Legendre) a bien été exceptionnelle, mais&nbsp;l’évolution&nbsp;et les responsabilités ont également fait partie de cette expérience.</p><p>J'ai travaillé une année et demi en tant développeur lambda. Je suivais à la lettre ce qu'on me demandait de faire. Je faisais mon maximum pour le faire le mieux possible, en me formant, en demandant de l'aide quand c'était nécessaire, et même en travaillant chez moi les soirs et weekend (je me rappelle des nuits à investiguer WPF pour résoudre des problèmes sur CiviKey par exemple).</p><p>Ce n'est qu'après presque deux ans que je me suis rendu compte de la liberté qui était offerte aux salariés d'Invenietis. La structure étant assez réduite et les personnes qui y travaillent étant un minimum intelligentes, il est possible de proposer de nouvelles idées ! Chacun est libre d'expérimenter, de proposer de nouvelles façons de faire telle ou telle tâche.</p><p>Contrairement à ce que je pensais, Invenietis n'est pas gravé dans le marbre. On peut faire évoluer la structure, et il faut le faire régulièrement pour garder la dynamique qui nous anime depuis le début. Ce n'est qu'après avoir eu ce déclic que je me suis vraiment investi à 200% dans Invenietis. Non plus au travers des projets, mais directement au sein de l'organisation pour faire en sorte que cela fonctionne encore mieux.</p><h3>Ce que j'ai changé</h3><div><br></div><h4>Git</h4><p><img src="/img/references/invenietis/git.png" class="right">Git est un système de gestion de contenu, versionné et distribué. C'est une solution assez récente qui devient de plus en plus adoptée dans le monde du développement. Après quelques mois d'existance et ne connaissant rien à cette technologie, j'ai eu envie d'en savoir plus. C'est grâce à une conférence organisée par Alt.Net que j'ai commencé mon apprentissage de Git.</p><p>Après avoir participé à la conférence Alt.Net, ensuite au workshop organisé dans les locaux d'Octo, et enfin après avoir lu l'intégralité du livre Pro Git de Scott Chacon, j'ai décidé d'organiser une "conférence" interne à Invenietis afin de présenter pourquoi Git était finalement meilleur que notre solution de l'époque. En préparant cette conférence j'ai voulu faire une mise en pratique de Git à Invenietis en prenant des exemples concrets et en montrant ce que cela pouvait nous apporter.</p><p>La conférence s'est bien passée, chacun a compris ce que j'essayais de faire passer et nous utilisons désormais Git sur la quasi totalité de nos projets.</p><h4>Méthodologie Kanban et Trello</h4><p><img src="/img/references/invenietis/trello.png" class="left">Porté par le succès de mon implication autour de Git, j'ai continué à assister aux conférences d'Alt.Net et me suis intéressé aux autres User Groups du même genre. Cette fois plus par curiosité et afin d'enrichir ma culture générale.</p><p>C'est pas le user group "Cocoa Heads" que j'ai découvert un nouvel outil, et une méthodologie qui pourrait nous permettre d'améliorer la qualité de nos solutions. La conférence interne sur Trello et Kanban était en préparation !</p><p>Un peu de la même façon que pour Git, j'ai simplement présenté comment nous pouvions utiliser l'outil Trello, avec ou sans Kanban, dans nos projets. L'adoption a été moins franche que pour Git, mais cela nous a permis avec Guillaume et Cédric de mettre au point une solution qui en pratique nous facilite la vie.</p><h4>GetPackage</h4><p><img src="/img/references/invenietis/GP.png" class="right">Enfin GetPackage est un peu différent des deux actions précédentes. GetPackage est né d'une étude que j'ai voulu faire sur NuGet (outil de packaging soutenu par Microsoft). Nous avions déjà parlé de NuGet un an auparavant, lors de sa sortie, et après avoir fait le tour des fonctionnalités nous avions choisi d'écarter cet outil pour développer le notre.</p><p>Un an après et une dizaine de versions plus tard, j'ai jugé utile de refaire le tour de NuGet. Une fois le tour terminé j'ai beaucoup discuté avec Olivier, Guillaume et Cédric de notre décision de ne pas utiliser NuGet. Je pensait que NuGet représentait une bonne solution pour distribuer des packages de développements, que cet outil entrait bien dans la stratégie de la société, et que finalement NuGet n'était pas si contradictoire avec CK-Package (notre solution maison).</p><p>Nous avons donc décidé tous les quatre d'adopter NuGet comme outil de développement, et de garder CK-Package pour déployer les packages sur les machines de production par exemple. Suite à cette décision, j'ai commencé à travailler sur un serveur permettant facilement d'administrer les packages à distribuer aux développeurs.</p><p>NuGet a été assez vite intégré à nos solutions et plus les versions de mon "petit serveur de packages" avancaient, plus les attentes étaient grandes. Face au potentiel de celui ci nous avons choisi d'investir du temps, et avons fait en sorte de professionnaliser ma solution de distribution de packages. GetPackage était né.</p><p>Aujourd'hui GetPackage est un produit important pour Invenietis. Il est en production et est utilisé en interne par les développeurs d'Invenietis ainsi que ceux de la société Epsilon. Il gère une cinquantaine de packages, et permet à tous de profiter facilement du travail des autres.</p></article><footer><a href="/experiences" class="button">Retourner aux expériences</a></footer>